server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name www.example.com;
	set $base /var/www/example.com;
	root $base/public;

	# SSL
	ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;

	# security
	include example.com/security.conf;

	# logging
	access_log /var/log/nginx/example.com.access.log;
	error_log /var/log/nginx/example.com.error.log warn;

	# index.php
	index index.php;

	# index.php fallback
	location / {
		try_files $uri $uri/ /index.php?$query_string;
	}

	# handle .php
	location ~ \.php$ {
		include example.com/php_fastcgi.conf;
	}

	# additional config
	include example.com/general.conf;
}

# CDN
server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name cdn.example.com;
	root /var/www/example.com/public;

	# SSL
	ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;

	# disable access_log
	access_log off;

	# gzip
	gzip on;
	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

	# allow safe files
	location ~* \.(?:css(\.map)?|js(\.map)?|ttf|ttc|otf|eot|woff2?|svgz?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv|pdf|docx?|dotx?|docm|dotm|xlsx?|xltx?|xlsm|xltm|pptx?|potx?|pptm|potm|ppsx?)$ {
		add_header Access-Control-Allow-Origin "*";
		add_header Cache-Control "public";
		expires 30d;
	}

	# deny everything else
	location / {
		deny all;
	}
}

# non-www, subdomains redirect
server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name .example.com;

	# SSL
	ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;

	return 301 https://www.example.com$request_uri;
}

# HTTP redirect
server {
	listen 80;
	listen [::]:80;

	server_name .example.com;

	include example.com/letsencrypt.conf;

	location / {
		return 301 https://www.example.com$request_uri;
	}
}